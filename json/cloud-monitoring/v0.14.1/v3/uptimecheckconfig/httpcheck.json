{"id":"monitoring\/v3\/uptimecheckconfig\/httpcheck","type":"","title":"Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck","name":"HttpCheck","description":"<p>Information involved in an HTTP\/HTTPS uptime check request.<\/p>\n<p>Generated from protobuf message <code>google.monitoring.v3.UptimeCheckConfig.HttpCheck<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf\/tree\/v3.6.1.3\/php\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L109","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.use_ssl\n","description":"<p>If true, use HTTPS instead of HTTP to run the check.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.path\n","description":"<p>The path to the page to run the check against. Will be combined with the host (specified within the MonitoredResource) and port to construct the full URL. Optional (defaults to &quot;\/&quot;).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.port\n","description":"<p>The port to the page to run the check against. Will be combined with host (specified within the MonitoredResource) and path to construct the full URL. Optional (defaults to 80 without SSL, or 443 with SSL).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"data.auth_info\n","description":"<p>The authentication information. Optional when creating an HTTP check; defaults to empty.<\/p>","types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\/basicauthentication\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck\\BasicAuthentication<\/a>"],"optional":null,"nullable":null},{"name":"data.mask_headers\n","description":"<p>Boolean specifiying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get\/List calls, if mask_headers is set to True then the headers will be obscured with <strong>**<\/strong>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.headers\n","description":"<p>The list of headers to send as part of the uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described at <a href=\"https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt\">https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt<\/a> (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf\/tree\/v3.6.1.3\/php\/src\/Google\/Protobuf\/Internal\/MapField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\MapField<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getUseSsl","type":"instance","name":"getUseSsl","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L120","description":"<p>If true, use HTTPS instead of HTTP to run the check.<\/p>\n<p>Generated from protobuf field <code>bool use_ssl = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setUseSsl","type":"instance","name":"setUseSsl","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L132","description":"<p>If true, use HTTPS instead of HTTP to run the check.<\/p>\n<p>Generated from protobuf field <code>bool use_ssl = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If true, use HTTPS instead of HTTP to run the check.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getPath","type":"instance","name":"getPath","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L148","description":"<p>The path to the page to run the check against. Will be combined with the\nhost (specified within the MonitoredResource) and port to construct the\nfull URL. Optional (defaults to &quot;\/&quot;).<\/p>\n<p>Generated from protobuf field <code>string path = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setPath","type":"instance","name":"setPath","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L162","description":"<p>The path to the page to run the check against. Will be combined with the\nhost (specified within the MonitoredResource) and port to construct the\nfull URL. Optional (defaults to &quot;\/&quot;).<\/p>\n<p>Generated from protobuf field <code>string path = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The path to the page to run the check against. Will be combined with the\nhost (specified within the MonitoredResource) and port to construct the\nfull URL. Optional (defaults to &quot;\/&quot;).<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getPort","type":"instance","name":"getPort","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L178","description":"<p>The port to the page to run the check against. Will be combined with host\n(specified within the MonitoredResource) and path to construct the full\nURL. Optional (defaults to 80 without SSL, or 443 with SSL).<\/p>\n<p>Generated from protobuf field <code>int32 port = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setPort","type":"instance","name":"setPort","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L192","description":"<p>The port to the page to run the check against. Will be combined with host\n(specified within the MonitoredResource) and path to construct the full\nURL. Optional (defaults to 80 without SSL, or 443 with SSL).<\/p>\n<p>Generated from protobuf field <code>int32 port = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The port to the page to run the check against. Will be combined with host\n(specified within the MonitoredResource) and path to construct the full\nURL. Optional (defaults to 80 without SSL, or 443 with SSL).<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getAuthInfo","type":"instance","name":"getAuthInfo","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L207","description":"<p>The authentication information. Optional when creating an HTTP check;\ndefaults to empty.<\/p>\n<p>Generated from protobuf field <code>.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication auth_info = 4;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\/basicauthentication\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck\\BasicAuthentication<\/a>"],"description":""}]},{"id":"setAuthInfo","type":"instance","name":"setAuthInfo","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L220","description":"<p>The authentication information. Optional when creating an HTTP check;\ndefaults to empty.<\/p>\n<p>Generated from protobuf field <code>.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication auth_info = 4;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The authentication information. Optional when creating an HTTP check;\ndefaults to empty.<\/p>\n","types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\/basicauthentication\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck\\BasicAuthentication<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getMaskHeaders","type":"instance","name":"getMaskHeaders","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L239","description":"<p>Boolean specifiying whether to encrypt the header information.<\/p>\n<p>Encryption should be specified for any headers related to authentication\nthat you do not wish to be seen when retrieving the configuration. The\nserver will be responsible for encrypting the headers.\nOn Get\/List calls, if mask_headers is set to True then the headers\nwill be obscured with <strong>**<\/strong>.<\/p>\n<p>Generated from protobuf field <code>bool mask_headers = 5;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setMaskHeaders","type":"instance","name":"setMaskHeaders","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L256","description":"<p>Boolean specifiying whether to encrypt the header information.<\/p>\n<p>Encryption should be specified for any headers related to authentication\nthat you do not wish to be seen when retrieving the configuration. The\nserver will be responsible for encrypting the headers.\nOn Get\/List calls, if mask_headers is set to True then the headers\nwill be obscured with <strong>**<\/strong>.<\/p>\n<p>Generated from protobuf field <code>bool mask_headers = 5;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Boolean specifiying whether to encrypt the header information.<\/p>\n<p>Encryption should be specified for any headers related to authentication\nthat you do not wish to be seen when retrieving the configuration. The\nserver will be responsible for encrypting the headers.\nOn Get\/List calls, if mask_headers is set to True then the headers\nwill be obscured with <strong>**<\/strong>.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getHeaders","type":"instance","name":"getHeaders","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L277","description":"<p>The list of headers to send as part of the uptime check request.<\/p>\n<p>If two headers have the same key and different values, they should\nbe entered as a single header, with the value being a comma-separated\nlist of all the desired values as described at\n<a href=\"https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt\">https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt<\/a> (page 31).\nEntering two separate headers with the same key in a Create call will\ncause the first to be overwritten by the second.\nThe maximum number of headers allowed is 100.<\/p>\n<p>Generated from protobuf field <code>map&lt;string, string&gt; headers = 6;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf\/tree\/v3.6.1.3\/php\/src\/Google\/Protobuf\/Internal\/MapField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\MapField<\/a>"],"description":""}]},{"id":"setHeaders","type":"instance","name":"setHeaders","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L296","description":"<p>The list of headers to send as part of the uptime check request.<\/p>\n<p>If two headers have the same key and different values, they should\nbe entered as a single header, with the value being a comma-separated\nlist of all the desired values as described at\n<a href=\"https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt\">https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt<\/a> (page 31).\nEntering two separate headers with the same key in a Create call will\ncause the first to be overwritten by the second.\nThe maximum number of headers allowed is 100.<\/p>\n<p>Generated from protobuf field <code>map&lt;string, string&gt; headers = 6;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The list of headers to send as part of the uptime check request.<\/p>\n<p>If two headers have the same key and different values, they should\nbe entered as a single header, with the value being a comma-separated\nlist of all the desired values as described at\n<a href=\"https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt\">https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt<\/a> (page 31).\nEntering two separate headers with the same key in a Create call will\ncause the first to be overwritten by the second.\nThe maximum number of headers allowed is 100.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf\/tree\/v3.6.1.3\/php\/src\/Google\/Protobuf\/Internal\/MapField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\MapField<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/v0.14.1\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]}]}